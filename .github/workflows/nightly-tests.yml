name: Nightly Tests

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

jobs:
  comprehensive-testing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run comprehensive test suite
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha
        VITE_ENVIRONMENT: development
      run: |
        npm run test:coverage
        npm run lint
        npx tsc --noEmit
        
    - name: Build test (Development)
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha
        VITE_ENVIRONMENT: development
      run: npm run build
      
    - name: Build test (Staging)
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha-staging
        VITE_ENVIRONMENT: staging
      run: npm run build
      
    - name: Build test (Production)
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha
        VITE_ENVIRONMENT: production
      run: npm run build

  performance-testing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for performance testing
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha
        VITE_ENVIRONMENT: production
      run: npm run build
      
    - name: Serve built files
      run: npx vite preview --port 3000 &
      
    - name: Wait for server
      run: npx wait-on http://localhost:3000
      
    - name: Install Lighthouse
      run: npm install -g @lhci/cli
      
    - name: Run Lighthouse performance audit
      run: |
        lhci autorun \
          --collect.url=http://localhost:3000 \
          --collect.numberOfRuns=3 \
          --assert.preset=lighthouse:no-pwa \
          --assert.assertions.performance=0.8 \
          --assert.assertions.accessibility=0.9 \
          --assert.assertions.best-practices=0.8 \
          --assert.assertions.seo=0.8

  accessibility-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      env:
        VITE_COUNTER_WORKSPACE: perhitsiksha
        VITE_ENVIRONMENT: production
      run: npm run build
      
    - name: Serve built files
      run: npx vite preview --port 3000 &
      
    - name: Wait for server
      run: npx wait-on http://localhost:3000
      
    - name: Install axe-core CLI
      run: npm install -g @axe-core/cli
      
    - name: Run accessibility tests
      run: |
        # Test main pages
        axe http://localhost:3000 --exit
        axe http://localhost:3000/about --exit
        axe http://localhost:3000/testimonials --exit
        axe http://localhost:3000/stories --exit

  dependency-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for outdated packages
      run: npm outdated || echo "Some packages may need updates"

  api-integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Test Counter API availability
      run: |
        echo "Testing Counter API endpoints..."
        # Test main counter endpoint
        curl -f "https://api.counterapi.dev/v2/perhitsiksha/perhitsiksha-visits" || exit 1
        echo "Counter API is available"
        
    - name: Test staging counter endpoint
      run: |
        # Test staging endpoint (if it exists)
        curl -f "https://api.counterapi.dev/v2/perhitsiksha-staging/perhitsiksha-visits" || echo "Staging counter may need setup"

  notification:
    runs-on: ubuntu-latest
    needs: [comprehensive-testing, performance-testing, accessibility-audit, dependency-audit, api-integration-tests]
    if: failure()
    
    steps:
    - name: Notify on failure
      run: |
        echo "‚ùå Nightly tests failed!"
        echo "Check the workflow logs for details."
        # Integration point for notifications (Slack, email, etc.)